{
  "object type": "SmartShift Retrofit",
  "description": {
    "definition": "SmartShift Retrofit is a specialized dual maintenance solution designed to merge development changes from one SAP system to another parallel system, such as between ECC and S/4HANA environments. It ensures consistency between parallel landscapes during project cutovers, upgrades, or parallel tracks.",
    "purpose": "To prevent missing changes or inconsistencies between systems by retrofitting (copying and merging) relevant changes made in one system (usually source) into another system (usually target).",
    "who_uses_it": [
      "ABAP Developers",
      "SAP Basis Administrators",
      "SmartShift Retrofit Teams",
      "Release/Transport Coordinators"
    ],
    "when_to_use": [
      "During cutovers or go-lives",
      "During S/4HANA migrations",
      "When two SAP environments are developed in parallel",
      "When changes are made in lower systems that need to be replicated in higher or parallel systems"
    ],
    "types_of_retrofit": [
      {
        "type": "Offline Retrofit",
        "description": "This process is done outside the SAP GUI using a tool like Meld. The code is extracted as XML and compared using a 3-way merge approach. It requires manual work from the developer to handle the merging and apply changes to the target."
      },
      {
        "type": "Online Retrofit",
        "description": "This process happens directly in the SmartShift WebUI dashboard (/smash/rfit). It provides a browser-based interface similar to Meld but integrated with SAP. Developers can perform code comparisons and directly push changes to the target system."
      }
    ],
    "scoping": {
      "service_scope_objects": {
        "definition": "SAP objects typically non-code-based and not handled using automated tools. Examples include DDIC entries, forms, texts.",
        "key_characteristics": [
          "Do not contain ABAP logic",
          "Often have version history",
          "Minimal or no automation rules applicable",
          "Handled manually or via SE03 and version comparison"
        ],
        "common_object_types": {
          "DDIC_Objects": ["TABL (Table Definitions)", "TABD (Table Delivery Classes)", "VIEW (Database Views)", "DTEL (Data Elements)", "TTYP (Table Types)", "DOMA (Domains)"],
          "Text_Objects": ["DOCU (Documentation)", "TEXT (Standard Texts)", "REPT (Report Texts)", "MSAG/MESS (Message Classes)"],
          "Generated_Objects": ["IWPR (OData Projects)", "DYNP (Screen Definitions)"],
          "Form_Objects": ["SSFO (Smart Styles)", "FORM (SAPscript)", "SFPI (Smartforms Includes)", "SFPF (Smartforms Form Definitions)"]
        },
        "versioning_guidelines": {
          "most_have_versions": "Most objects have versioning support for comparing changes.",
          "some_have_no_versions": "Smartforms, SAPscripts, and some text objects lack versioning and require SE03-based Safe-to-Import checks."
        },
        "comparison_methods": [
          "Use SE03 for Safe-to-Import checks",
          "Use individual TCodes with 'Fetch Remote Versions'",
          "Use RSSYSCOMP to compare Active versions between source and target via RFC"
        ],
        "limitations": [
          "RSSYSCOMP only compares Active versions",
          "Not all object types supported in RSSYSCOMP (e.g., DOCU, MESS, FORM, TEXT)",
          "Standard SAP object changes (e.g., MATNR field length) should be ignored unless part of Z-development"
        ]
      },
      "tool_scope_objects": {
        "definition": "Repository objects with ABAP code that are analyzable and updatable by SmartShift tools.",
        "object_types": ["REPS/PROG", "FUGR", "FUNC", "CLAS"],
        "offline_process_steps": [
          "Extract system data as XML using extractor utility",
          "Tool parses XML and generates: source_parsed, merged, target folders",
          "Use Meld for 3-way comparison (source_parsed vs merged vs target)",
          "Developer merges and applies changes manually to target system"
        ],
        "online_process_steps": [
          "Access WebUI via /smash/rfit",
          "Select object for retrofit",
          "Use 3-way comparison in browser",
          "Click 'Retrofit Done' to push changes to target"
        ]
      }
    },
    "merge_cases": [
      {
        "case": "Automerge",
        "description": "Automatic merge of source and target without manual intervention."
      },
      {
        "case": "Conflict",
        "description": "Manual intervention needed due to conflicting changes."
      },
      {
        "case": "Unchanged/Identical",
        "description": "Source and target are identical; marked 'No Action Required'."
      }
    ]
  },
  "tcode": "/SMASH/RFIT",
  "tool_used": [
    "SmartShift WebUI",
    "Meld (3-way comparison tool)",
    "SAP Transport System",
    "XML Extractor Utility",
    "SmartShift Tool Parser",
    "SE03",
    "RSSYSCOMP"
  ],
  "retrofit_process": {
    "offline": {
      "steps": [
        "Extract XML from system",
        "Tool parses into folders",
        "Use Meld for 3-way comparison",
        "Manually apply merged code"
      ]
    },
    "online": {
      "steps": [
        "Access /smash/rfit WebUI",
        "Select object and review comparison",
        "Apply changes in browser",
        "Click Retrofit Done to push"
      ]
    },
    "post_retrofit_remediation": {
      "purpose": "Ensure code quality and system stability",
      "required_checks": [
        {
          "type": "UC",
          "description": "Unicode Check"
        },
        {
          "type": "EPC",
          "description": "Extended Program Check"
        },
        {
          "type": "HCC",
          "description": "HANA Code Check"
        },
        {
          "type": "S4",
          "description": "S/4HANA Readiness Check"
        }
      ],
      "completion_criteria": "Retrofit is only complete after merge + all checks pass"
    }
  },
  "comparison notes": {
    "tools": ["Meld", "SmartShift WebUI", "RSSYSCOMP", "SE03"],
    "methods": [
      "Fetch Remote Versions (TCode)",
      "RSSYSCOMP Active version check",
      "Safe-to-Import validation"
    ],
    "merge_cases": [
      "Automerge: automatic merge for simple cases",
      "Conflict: manual intervention for differing source and target",
      "Unchanged: no action needed when code is identical"
    ],
    "limitations": [
      "RSSYSCOMP only handles active versions",
      "Not all objects supported (e.g., DOCU, FORM, MESS)",
      "Avoid modifying standard SAP objects unless customized"
    ]
  },
  "common_errors": [
    "Trying to retrofit standard SAP field length (e.g., MATNR 18 vs 40)",
    "Missing versioning for Smartforms or SAPscripts during manual checks",
    "Skipping remediation checks like EPC or HCC post-merge",
    "Applying retrofit without validating via SE03 or comparison tools"
  ],
  "best_practices": [
    "Always run UC, EPC, HCC, and S4 checks after merging",
    "Use RSSYSCOMP for DDIC and table-based comparison",
    "Use SmartShift WebUI for tool-scope objects for traceability",
    "Use SE03 to validate Safe-to-Import manually when versioning is missing",
    "Mark all 'Unchanged' objects explicitly to avoid reprocessing"
  ],
  "chatbot_responses": {
    "What is SmartShift Retrofit?": "SmartShift Retrofit is a solution that helps copy and merge development changes between parallel SAP environments, like from ECC to S/4. It supports both offline (using Meld) and online (using WebUI) modes.",
    "What are service scope objects?": "Service scope objects are non-code SAP objects like tables, texts, forms, and messages. These are usually maintained manually and are compared using SE03, RSSYSCOMP, or individual TCodes.",
    "What are tool scope objects?": "Tool scope objects are code-based SAP objects such as programs, classes, and function modules. These are retrofitted using tools like Meld (offline) or WebUI (online) with 3-way comparisons.",
    "What is offline retrofit?": "Offline retrofit involves extracting code as XML, parsing it into folders, and using Meld to perform 3-way comparisons between source, merged, and target code. The developer manually applies the merged code to the target.",
    "What is online retrofit?": "Online retrofit is done through the WebUI (/smash/rfit). It allows developers to compare and merge code in-browser and apply the merged result directly to the target system.",
    "What does 'automerge' mean in retrofit?": "Automerge means the system could merge the code from source and target automatically without conflicts. No manual work is needed.",
    "What is a 'conflict case' in retrofit?": "A conflict case occurs when both the source and target systems have different changes in the same code area. The developer must manually resolve the conflict and merge the correct logic.",
    "When is retrofit considered complete?": "Retrofit is considered complete only after both the merging process is done and manual remediation checks (UC, EPC, HCC, S4) have passed successfully."
  }
}
