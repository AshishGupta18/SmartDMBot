{
  "object": "IDoc",
  "technical_name": ["IDOC"],
  "description": "IDoc (Intermediate Document) is a standard SAP structure used to exchange business data between SAP systems and external systems asynchronously. A basic type defines the standard structure of an IDoc.",
  "tcode": ["WE30", "WE31", "SE16"],
  "tcode_details": [
    {
      "code": "WE30",
      "purpose": "Used to create and edit IDoc types (Basic Types and Extensions)."
    },
    {
      "code": "WE31",
      "purpose": "Used to create and edit segments used in IDocs."
    },
    {
      "code": "SE16",
      "purpose": "Used to display and modify table entries, including segment release status."
    }
  ],
  "used_in": ["Integration", "Interfaces", "ALE", "Middleware", "Data Transfer"],
  "structure": {
    "tabs": [
      {
        "name": "Basic Type",
        "description": "Defines the base structure of the IDoc, including segment hierarchy and field definitions."
      },
      {
        "name": "Segment",
        "description": "Defines the building blocks of the IDoc. Each segment represents a logical group of data fields."
      },
      {
        "name": "Release Status",
        "description": "Indicates whether the IDoc or its segments are modifiable or released. Released objects are locked for change."
      }
    ]
  },
  "how_it_works": "IDocs are used to transfer business transaction data. A basic type includes predefined segments arranged in a hierarchical structure. Manual creation in the target system is required during retrofit if the IDoc is new.",
  "example": {
    "idoc": "/LUNEH/PD_EBUS_WBBDLD04",
    "segment": {
      "name": "ZSEG_ORDERDATA",
      "fields": [
        { "name": "ORDER_ID", "type": "CHAR", "length": 10 },
        { "name": "CUSTOMER_NAME", "type": "CHAR", "length": 30 },
        { "name": "ORDER_DATE", "type": "DATS", "length": 8 }
      ]
    },
    "used_for": "Transfer order data from external system to SAP",
    "status": "Retrofit Done – Created IDoc and segment in target system"
  },
  "retrofit": {
    "overview": "Basic Types (IDoc) are usually not imported via ToC due to dependency on TABU entries. Manual creation is required during retrofit.",
    "cases": [
      {
        "name": "Case 1 - New IDoc",
        "steps": [
          "Go to WE30 and enter object name.",
          "Select 'Basic Type' radio button.",
          "Click on 'Create'.",
          "Check if required segment exists in target; create if missing using WE31.",
          "Create segment with same name, structure, and field types as in source.",
          "Check scoping sheet to confirm TABL entry; if not found, consult customer.",
          "Save. Do not release segment if it’s not released in source.",
          "Add segments to IDoc using correct hierarchy (child/same level)."
        ]
      },
      {
        "name": "Case 2 - Existing IDoc",
        "steps": [
          "Use WE30 to open object and click 'Change'.",
          "If unable to edit, check release status.",
          "Cancel release using menu or debug method if needed.",
          "Make required changes as per source and re-release if necessary."
        ]
      }
    ],
    "debug_workaround": {
      "description": "Use this if the release/cancel release option doesn’t work.",
      "steps": [
        "Open table EDISDEF in SE16 and enter segment name.",
        "Activate debug mode using /h.",
        "Change CODE from SHOW to EDIT and execute.",
        "Delete the value 'X' in the closed field and save.",
        "Now check in WE31 — release flag will be removed."
      ]
    },
    "comparison_details": {
      "object_type": "Basic Type",
      "tcode": "WE30",
      "table": "EDBAS"
    },
    "status_types": [
      "Retrofit Done – Created IDoc in target",
      "No Action - Identical"
    ]
  },
  "structured_steps": {
    "create_new_idoc": [
      "Go to WE30",
      "Select 'Basic Type', click Create",
      "Enter name, description, version",
      "Add segments using correct hierarchy",
      "Save without releasing unless required"
    ],
    "create_segment": [
      "Go to WE31",
      "Enter segment name and click Create",
      "Add fields (name, type, length)",
      "Save and avoid releasing if not done in source"
    ]
  },
  "tables": [
    {
      "name": "EDBAS",
      "description": "Holds metadata for IDoc Basic Types"
    },
    {
      "name": "EDISDEF",
      "description": "Stores metadata for segments including release status"
    },
    {
      "name": "EDISEG",
      "description": "Holds segment field definitions"
    }
  ],
  "errors_and_troubleshooting": [
    {
      "error": "Segment not editable in WE31",
      "solution": "Use debug workaround via SE16 on EDISDEF to cancel release"
    },
    {
      "error": "Segment structure mismatch",
      "solution": "Ensure fields, types, and hierarchy exactly match source system"
    },
    {
      "error": "Cannot change Basic Type",
      "solution": "Check release status and cancel it before making edits"
    }
  ],
  "best_practices": [
    "Always check scoping sheet before creating segment.",
    "Avoid using ToC for IDoc import due to TABU dependency.",
    "Match segment structure and release status with source.",
    "Use proper hierarchy when adding segments.",
    "Use debug method cautiously for release cancellation."
  ],
  "things_to_remember": [
    "IDoc basic types are usually manually created during retrofit.",
    "Segments must match exactly with source system.",
    "Releasing segments when not released in source can cause future issues."
  ],
  "common_questions": [
    "How to create a new IDoc in target system?",
    "What to do if I can't edit the IDoc?",
    "How to cancel segment release if UI option fails?",
    "Do I need to release segments if they are not released in source?",
    "Why is ToC not preferred for IDoc migration?",
    "Where can I find the structure of an existing IDoc?",
    "What is the difference between Basic Type and Extension?",
    "What is the purpose of WE30 vs WE31?",
    "What should I check before creating a new segment?"
  ]
}
